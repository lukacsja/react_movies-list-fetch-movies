{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","convertData","data","Title","Plot","Poster","imdbID","FindMovie","addMovie","useState","query","setQuery","isLoading","setIsLoading","hasError","setHasError","searchResult","setSearchResult","errorMessage","setErrorMessage","useEffect","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","response","finally","htmlFor","type","id","placeholder","value","onChange","target","cn","disabled","trim","onClick","App","setMovies","some","listedMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63e10465.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from './types/Movie';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=631fc0e0';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n\nexport const convertData = (data: MovieData): Movie => {\n  return {\n    title: data.Title,\n    description: data.Plot,\n    imgUrl: data.Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : data.Poster,\n    imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n    imdbId: data.imdbID,\n  };\n};\n","import cn from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { getMovie, convertData } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [searchResult, setSearchResult] = useState<MovieData | null>(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const submitQuery = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n    // setHasError(false);\n\n    getMovie(query)\n      .then((response: MovieData | ResponseError) => {\n        if ('Title' in response) {\n          setSearchResult(response);\n        } else {\n          setHasError(true);\n          setErrorMessage(response.Error);\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const addMovieToTheList = () => {\n    if (searchResult) {\n      addMovie(convertData(searchResult));\n      setQuery('');\n      setSearchResult(null);\n    }\n  };\n\n  useEffect(() => {\n    setHasError(false);\n  }, [query]);\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={submitQuery}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query.trim()}\n            >\n              Find a movie\n            </button>\n          </div>\n          {searchResult && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieToTheList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {searchResult && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={convertData(searchResult)} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const extendMoviesList = (movie: Movie) => {\n    if (!movies.some(listedMovie => listedMovie.imdbId === movie.imdbId)) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={extendMoviesList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}